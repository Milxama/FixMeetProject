@using Microsoft.AspNet.Identity
@using System.Data.Entity;
@using System.Web.Mvc;
@using FixMeetWebApi.Models;
@model IEnumerable<FixMeetWebApi.Models.RequestModels>
@{
    var db = new ApplicationDbContext();
    var user_id = User.Identity.GetUserId();
    var user_role = db.Users.Where(u => u.Id == user_id).FirstOrDefault().UserRole;
    //var offer_count = 0;

    var request = db.RequestModels.Where(req => req.UserID == user_id).FirstOrDefault();
    //if (request.IsOpen == true)
    //{
    //    var requestId = request.RequestID;
    //    var offerList = db.OfferModels.Where(off => off.RequestID == requestId).ToList();
    //    offer_count = offerList.Count();
    //}



}
@{
    if (user_role == UserRole.Customer)
        {
            ViewBag.Title = "My Requests";
        }
       else
        {
            ViewBag.Title = "List Of Requests";
        }
    }

<h2>Index</h2>
  
<p>
    @if (user_role == UserRole.Customer)
    {
        @Html.ActionLink("Create New", "Create")
    }
</p>

<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.RequestID)
        </th>
        @if (user_role == UserRole.Supplier)
        {
            <th>
                @Html.DisplayNameFor(model => model.CustomerFirstName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CustomerLastName)
            </th>
        }
        <th>
            @Html.DisplayNameFor(model => model.RequestDate)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Category)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Description)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.IsOpen)
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.RequestID)
            </td>
            @if (user_role == UserRole.Supplier)
            {
                <td>
                    @Html.DisplayFor(modelItem => item.CustomerFirstName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CustomerLastName)
                </td>
            }
            <td>
                @Html.DisplayFor(modelItem => item.RequestDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Category)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Description)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.IsOpen)
            </td>

            <td>

                @*@if (db.RequestModels.Where(req => req.IsOpen == true).FirstOrDefault().IsOpen == true)
                    {
                        @Html.ActionLink("Reserve an offer", "Create", "OfferModels", routeValues: null, htmlAttributes: new { id = item.RequestID })
                    }*@

                @if (user_role == UserRole.Supplier)
                {
                    @*@Html.ActionLink("Reserve an offer", "Create", "OfferModels", routeValues: null, htmlAttributes: new { id = item.RequestID })*@
                    @Html.ActionLink("Reserve an offer", "Create", "OfferModels", new { item.RequestID }, null)


                }
                @if (user_role == UserRole.Customer)
                {

                    @Html.ActionLink("Offers to this Request", "Index", "OfferModels", new { item.RequestID }, null)
                }
                @*@Html.ActionLink("Reserve an offer", "Create", "OfferModels", routeValues: null, htmlAttributes: new { id = item.RequestID }) |*@
                @Html.ActionLink("Details", "Details", new { id = item.RequestID }) |
                @if (user_role == UserRole.Customer)
                {
                    @Html.ActionLink("Delete", "Delete", new { id = item.RequestID })

                }

            </td>

            @*default code by scalfolding
                    <td>
                    @Html.ActionLink("Reserve an offer", "Create", "OfferModels", routeValues: null, htmlAttributes: new { id = item.RequestID }) |
                    @Html.ActionLink("Edit", "Edit", new { id = item.RequestID }) |
                    @Html.ActionLink("Details", "Details", new { id = item.RequestID }) |
                    @Html.ActionLink("Delete", "Delete", new { id = item.RequestID })
                </td>*@
        </tr>
    }

</table>

<script>


</script>

@*@if (user_role == UserRole.Customer) //if costumer
    {


        <table class="table">
            <tr>
                <th>
                    @/*Html.DisplayNameFor(model => model.RequestDate)*/
                </th>
                <th>
                    @/*Html.DisplayNameFor(model => model.Category)*/
                </th>
                <th>
                    @/*Html.DisplayNameFor(model => model.Description)*/
                </th>
                <th>
                    @/*Html.DisplayNameFor(model => model.UserID)*/
                </th>
                <th>
                    @/*Html.DisplayNameFor(model => model.IsOpen)*/
                </th>
                <th></th>
            </tr>

            @//foreach (var item in Model)
        //{
                <tr>
                    <td>
                        @/*Html.DisplayFor(modelItem => item.RequestDate)*/
                    </td>
                    <td>
                        @/*Html.DisplayFor(modelItem => item.Category)*/
                    </td>
                    <td>
                        @/*Html.DisplayFor(modelItem => item.Description)*/
                    </td>
                    <td>
                        @/*Html.DisplayFor(modelItem => item.UserID)*/
                    </td>
                    <td>
                        @/*Html.DisplayFor(modelItem => item.IsOpen)*/
                    </td>

                    <td>

                        @//if (db.RequestModels.Where(req => req.UserID == user_id && req.IsOpen == true).FirstOrDefault().IsOpen == true)
        //{
                            @/*Html.ActionLink("Reserve an offer", "Create", "OfferModels", routeValues: null, htmlAttributes: new { id = item.RequestID })*/


        //}
                        @/*Html.ActionLink("Details", "Details", new { id = item.RequestID })*/ |
                        @/*Html.ActionLink("Delete", "Delete", new { id = item.RequestID })*/

                        @Html.ActionLink("Reserve an offer", "Create", "OfferModels", routeValues: null, htmlAttributes: new { id = item.RequestID }) |
                            @Html.ActionLink("Details", "Details", new { id = item.RequestID }) |
                            @Html.ActionLink("Delete", "Delete", new { id = item.RequestID })


                    </td>

                    default code by scalfolding
                        <td>
                                @Html.ActionLink("Reserve an offer", "Create", "OfferModels", routeValues: null, htmlAttributes: new { id = item.RequestID }) |
                                @Html.ActionLink("Edit", "Edit", new { id = item.RequestID }) |
                                @Html.ActionLink("Details", "Details", new { id = item.RequestID }) |
                                @Html.ActionLink("Delete", "Delete", new { id = item.RequestID })
                            </td>
                </tr>
        }

        </table>

    @if (user_role == UserRole.Supplier)
        {

        }*@